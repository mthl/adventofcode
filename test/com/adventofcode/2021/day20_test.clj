(ns com.adventofcode.2021.day20-test
  (:require
   [clojure.string :as str]
   [clojure.test :refer [deftest is]]
   [com.adventofcode.util :as util]
   [com.adventofcode.2021.day20 :as sut]))

(def input
  (util/resources-lines "com/adventofcode/2021/day20.txt"))

(def sample
  (str/split-lines


#..#.
#....
##..#
..#..
..###"))

(def parsed
  {:algo

   :image ["#..#."
           "#...."
           "##..#"
           "..#.."
           "..###"]})

(def image-enhancement
  (sut/parse-image-enhancement input))

(deftest image-enhancement-test
  (is (= parsed (sut/parse-image-enhancement sample)))
  (is (= [".##.##."
          "#..#.#."
          "##.#..#"
          "####..#"
          ".#..##."
          "..##..#"
          "...#.#."]
         (sut/transform parsed)))
  (is (= [".......#."
          ".#..#.#.."
          "#.#...###"
          "#...##.#."
          "#.....#.#"
          ".#.#####."
          "..#.#####"
          "...##.##."
          "....###.."]
         (sut/transform parsed 2)))

  (is (= 35 (sut/count-lits (sut/transform parsed 2))))
  (is (= 4964 (sut/count-lits (sut/transform image-enhancement 2))))
  (is (= 3351 (sut/count-lits (sut/transform parsed 50))))
  (is (= 13202 (sut/count-lits (sut/transform image-enhancement 50)))))
